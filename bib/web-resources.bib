% Requires \usepackage{fontawesome} for social icons.

@online{Nash2016a,
  title = {\faYoutubePlay\ Functional C++ for Fun and Profit},
  author = {Phil Nash},
  date = {2016},
  organization = {Talk presented at St.\ Petersburg C++ Users Group},
  url = {https://youtu.be/YgcUuYCCV14},
}

@online{Henney2017a,
  title = {\faYoutubePlay\ Functional C++},
  author = {Kevlin Henney},
  date = {2017},
  organization = {Talk presented at the Build Stuff Software Development Conference, Mallorca, Spain},
  url = {https://youtu.be/CIg6eyJv4dk},
}

@online{Reischuck2017,
  title = {\faYoutubePlay\ {I}mprove your {C++} with inspirations from other languages},
  author = {Andreas Reischuck},
  date = {2017},
  organization = {Talk presented at Metting C++ 2017},
  url = {https://youtu.be/4DvSxmIadb0},
}

@online{Douglas2017a,
  title = {\faYoutubePlay\ {Mongrel Monads, Dirty, Dirty, Dirty}},
  author = {Niall Douglas},
  date = {2017},
  organization = {Talk presented at ACCU 2017},
  url = {https://youtu.be/XVofgKH-uu4},
}

@online{Douglas2017b,
  title = {\faYoutubePlay\ {I}ntroduction to the {P}roposed \texttt{std::expected}},
  author = {Niall Douglas},
  date = {2017},
  organization = {Talk presented at Meeting C++ 2017},
  url = {https://youtu.be/JfMBLx7qE0I},
}

@online{Park2017a,
  title = {\faYoutubePlay\ {MPark.Patterns}: Pattern Matching in {C++}},
  author = {Michael Park},
  date = {2017},
  organization = {Talk presented at CppCon 2017},
  url = {https://youtu.be/HaZ1UQXnuC8},
}

@online{Minsky2010,
  title = {\faVimeoSquare\ {Effective ML}},
  author = {Yaron Minsky},
  date = {2010},
  organisation = {Guest lecture at Harvard University CS51},
  note = {Guest lecture at Harvard University CS51},
  url = {https://vimeo.com/14313378}
}

@online{Fitlib,
  title = {\faGithub\ Fit: C++ function utility library},
  author = {Paul Fultz II},
  date = {2018},
  url = {https://github.com/pfultz2/Fit}
}

@online{TartanLlama-optional,
  title = {\faGithub\ {C}++11/14/17 \texttt{std::optional} with functional-style extensions and reference support},
  author = {Simon Brand},
  date = {2018},
  url = {https://github.com/TartanLlama/optional}
}

@online{MilewskiCTFP,
  title = {Category Theory for Programmers},
  author = {Bartosz Milewski},
  date = {2017},
  url = {https://github.com/hmemcpy/milewski-ctfp-pdf}
}

@book{MilewskiCpp,
  title = {Bartosz Milewski's Programming Cafe: Blog posts relating to Functional Programming in C++},
  author = {Paul Fultz II},
  date = {2018},
  url = {https://bartoszmilewski.com/category/c/}
}

@online{Doc-Boost.Hana,
  title = {{Boost.Hana}},
  author = {Louis Dionne},
  note = {{Boost C++ Libraries}},
  year = {2017},
  url = {http://boostorg.github.io/hana/},
}

@online{Doc-Boost.Hana,
  title = {{Boost.Hana}},
  author = {Louis Dionne},
  note = {{Boost C++ Libraries}},
  year = {2017},
  url = {http://boostorg.github.io/hana/},
}

@online{Romeo2017:PerfectCapture,
  author = {Vittorio Romeo},
  title = {Capturing perfectly-forwarded objects in lambdas},
  year = 2017,
  note = {(Blog)},
  url = {https://vittorioromeo.info/index/blog/capturing_perfectly_forwarded_objects_in_lambdas.html}
}

@online{FSFFP:ROP,
  author = {Scott Wlaschin},
  title = {Railway Oriented Programming},
  year = 2014,
  note = {F\# For Fun and Profit},
  url = {https://fsharpforfunandprofit.com/rop/}
}

@online{FSFFP:illegal-states,
  author = {Scott Wlaschin},
  title = {Designing with types: Making illegal states unrepresentable},
  year = 2013,
  note = {F\# For Fun and Profit},
  url = {https://fsharpforfunandprofit.com/posts/designing-with-types-making-illegal-states-unrepresentable/}
}

@online{Milewski2014ranges,
  author = {Bartosz Milewski},
  title = {{C++} Ranges are Pure Monadic Goodness},
  year = 2014,
  note = {Blog: Bartosz Milewski's Programming Cafe: Category Theory, Haskell, Concurrency, C++},
  url = {https://bartoszmilewski.com/2014/10/17/c-ranges-are-pure-monadic-goodness/},
}

@misc{Haskell.Control.Monad.Error,
  title = {{Haskell--Control.Monad.Error}},
  note = {\url{https://hackage.haskell.org/package/mtl-2.1.2/docs/Control-Monad-Error.html}}
}

@misc{Haskell.Control.Monad.Either,
  title = {{Haskell--Control.Monad.Either}},
  note = {\url{https://hackage.haskell.org/package/category-extras-0.52.0/docs/Control-Monad-Either.html}}
}

@misc{HaskellWiki.Currying,
  author = {{Haskell Wiki}},
  title = {Currying},
  url = {https://wiki.haskell.org/Currying}
}

@techreport{Jones1993Composing,
 title = {Composing monads},
 number = "YALEU/DCS/RR-1004",
 author = 	 "Jones, Mark P. and Luc Duponcheel",
 institution = "Department of Computer Science. Yale University",
 year = 1993,
}

@misc{Winfield2016-Google,
  abstract = {Professor Alan Winfield from The University of the West of England joined us to share his work on Robots and Ethics, in a talk entitled "The Thinking Robot".},
  author = {Winfield, Alan F. T.},
  keywords = {camera phone,free,sharing,upload,video,video phone},
  title = {\faYoutubePlay\ The Thinking Robot},
  note = {Talks at Google},
  url = {https://youtu.be/-e2MrWYRUF8},
  year = {2016}
}